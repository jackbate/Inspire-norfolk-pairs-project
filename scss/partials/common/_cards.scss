//=================
// HOME PAGE CARDS
//=================

.flex-direction{
  @include flexbox;
  @include flex-flow(row wrap);
  @media (min-width: map-get($breakpoints, 'm')) {
    @include flex-flow(row wrap);
  }
}

.cards{
  &-container{
    height: fit-content;
    background-color: $primary;
  }
  &-inner{
    @include set-content-width;
    margin: 0 auto;
    padding: 0 15px;
    border: 1px solid transparent;
  }
  &-decoration{
    @include flexbox;
    flex-direction: column;
    text-align: center;
    border: 1px transparent;
    margin: 15px auto;
    background-color: $secondary;
    // padding: 10px;
  }
  &-text{
    font-size: 0.675rem;
  }
  &-title{
    font-size: 1rem;
    color: $primary;
  }
}
.desc{
  &-text{
    font-size: 0.875rem;
  }
  &-title{ 
    font-size: 1.125rem;
  }
}

.text-decoration{
  color: $secondary;
  text-align: left;
  border: 1px transparent;
  background-color: $primary;
}

.icn-bg{
  border: red 10px;
  padding: 10px;
  border-radius: 50%;
}

.btm_border{
  border-bottom: 5px white solid;
}


.width1-query{
  @media (min-width: map-get($breakpoints, 'm')) {
    max-width: 40%;
  }
  @media (min-width: map-get($breakpoints, 'l')) {
    max-width: 30%;
  }
}

.width2-query{
  @media (min-width: map-get($breakpoints, 'l')) {
    max-width: 30%;
  }
}

//====================
// OUR SERVICES CARDS
//====================
// With pure CSS loads as expanded; if JS is enabled makes
// card collapsed (designed so that JS is unobtrusive - if
// user doesn't have JS enabled, they can still read all
// the content).

.service-card-container {
  @include set-content-width;
  margin   : 35px 0;
  padding  : 0;
  min-width: 100%;
  @media (min-width: map-get($breakpoints, 'm')) {
    padding: 0;
  }
}

.service-card {
  @include flexbox;
  @include flex-flow(column nowrap);
  @include align-items(stretch);
  @include align-content(stretch);

  margin          : 0 0 35px;
  padding         : 35px 20px; //35px;

  background-color: $primary;

  &-title,
  &-description {
    @include flex($grow: 0, $shrink: 0, $basis: auto);

    color         : $secondary;
    text-align    : center;
    margin     : 15px auto;

    $map-of-widths: (
      'm' : 680px,
      'l' : 900px,
      'xl': 940px,
    );
    @each $key, $value in $breakpoints {
      @media (min-width: $value) {
        box-sizing: content-box;
        max-width : map-get($map-of-widths, $key);
      }
    }
  }

  &-description {
    position   : relative;

    max-height : max-content;
    overflow   : hidden;

    line-height: 24px;

    .fade {
      visibility: hidden;
      position  : absolute;
      bottom    : 0;
      height    : 50px;
      width     : 100%;

      // N.B. Safari requires a transparent version of the same color, can't
      // just use the transparent keyword.
      background: linear-gradient(
        transparentize($primary, 1), $primary
      );
    }
  }

  &-button {
    @include button-base-style($style: 'secondary') {
      margin: 15px auto 0;
    }
  }
}



